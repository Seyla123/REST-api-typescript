name: CI/CD

on:
  push:
    branches:
      - main  # Adjust as needed

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dist-path: ${{ steps.upload-artifact.outputs.artifact-path }}
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name : Show Dictionaries
        run: ls -la
      
      - name: Upload dist Folder as Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Verify dist contents
        run: ls -la dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures that this job runs after the 'build' job completes
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Deploy Application
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          DEPLOY_HOST: ${{ secrets.EC2_PUBLIC_IP }}
          DIST_DEPLOY_PATH: /home/ubuntu/deploy
        run: |
          set -e
          
          # Install SSH client and rsync
          sudo apt-get update -y 
          sudo apt-get install -y openssh-client rsync

          # Start SSH agent and add the private key
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > private_key.pem
          chmod 400 private_key.pem

          # Ensure the .ssh directory exists and set permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Add the host to known hosts to prevent confirmation prompts
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts

          # Verify local directory structure
          echo "Contents of the dist directory:"
          ls -la dist/
          pwd

          # Deploy the `dist` folder to the EC2 instance
          echo "Deploying to EC2 staging..."
          ls -la ./home/runner/work/REST-api-typescript
          # rsync -avz -e "ssh -i private_key.pem" ./dist/ ubuntu@$DEPLOY_HOST:$DIST_DEPLOY_PATH

          # Run verification commands on the remote server
          ssh -i "private_key.pem" ubuntu@$DEPLOY_HOST "
            echo 'Deployment complete!' && 
            ls -l $DIST_DEPLOY_PATH
            mkdir seyla
            ls -la
          "

          # Clean up the private key file
          rm -f private_key.pem
          
          # Stop the SSH agent
          eval $(ssh-agent -k)



